1. To display the current working directory, the command is: 
pwd
The output is as follows.
/home/trg1
2. Display the path to and name of your HOME directory.
3. Display the login name using which you have logged into the system
4. Display the hidden files of your current directory.
5. List the names of all the files in your home directory.
6. Using the long listing format to display the files in your directory. 
7. List the files beginning with chap followed by any number or any lower case alphabet. 
(Example, it should display all files whose names are like chap1, chap2, chap3 ……., 
chapa,ahapb,chapc,……..)
8. Give appropriate command to create a directory called C_prog under your home 
directory. (Note: Check the directory using ls)
9. Create the following directories under your home directory. (Note: Check using ls)
newdir
newdirectory
10. List the names of all the files, including the contents of the sub directories under your 
home directory.
11. Remove the directory called newdirectory from your working directory.
12. Create a directory called temp under your home directory.
13. Remove the directory called newdir under your home directory and verify the above 
with the help of the directory listing command.
14. Create another directory directorynew under the temp directory.
15. Change the directory to your home directory.
16. From your home directory, change the directory to directorynew using relative and 
absolute path.
17. Remove the directory called c_prog, which is in your home directory.
18. Change to the directory /etc and display the files present in it.
19. List the names of all the files that begin with a dot in the /usr/bin directory.
20. Create a file first.unix with the following contents.
Hi! Good Morning everybody.
Welcome to the First exercise on UNIX.
Hope you enjoy doing the assignments.
21. Copy the file first.unix in your home directory to first.unics.
 (Note: checked using ls, first.unix file also should exist along with first.unics)
22. List the contents of first.unix and first.unics with a single command.
23. Create a new directory under the temp directory.
24. From your home directory, copy all the files to the directory created under the temp 
sub directory.
25. Move the file first.unix to the directory temp as second.unix 
26. Remove the file called first.unics from the home directory.
27. Change your directory to temp and issue the command rm *. What do you observe?
28. Move all files whose names end with a, c and o to the HOME directory.
29. Copy all files that end with a ‘UNIX’ to the temp directory.
30. Issuing a single command, remove all the files from the directory temp and the 
directory itself.
31. Try commands cp and mv with invalid number of arguments and note the results.
32. Use the cat command to create a file friends, with the following data:
Madhu 6966456 09/07/68
Jamil 2345215 08/09/67
Ajay 5546785 01/04/66
Mano 7820022 09/07/68
David 8281292 09/09/60
Simmi 7864563 12/12/70
Navin 2224311 30/05/68
The fields should be separated by a tab.
33. Display contents of the file friends.
34. Copy contents of friends to newfriend without using the cp command.
35. Display contents of the file friends and newfriends in a single command.
36. Find all users currently working on the system and store the output in a file named as 
users.
37. Append contents of friends file to the file, users.
38. Display current system date and time and record your observations. How is the time 
displayed?
39. Display calendar for the month and year of your birth
40. Try following commands and record your observations.
date “+ %”
date “+%m”
date “+%D” 
date “+%/%Training Activity”
date “+%Training Activity”
date “+%r”

----------------------------------------------------------------------------------------------------------------------------
Day2::
1. Give the execute permission for the user for a file chap1
2. Give the execute permission for user, group and others for a file add.c
3. Remove the execute permission from user, give read permission to group and others 
for a file aa.c
4. Give execute permission for users for a.c, kk.c, nato and myfile using single 
command
5. Change the directory to root directory. Check the system directories, like bin, etc, usr 
etc

: Using Pipes and Filters:
1: Redirect the content of the help document ls, into a file called as lsdoc.
2: Display the content of the lsdoc page wise.
3: Display only the first 4 lines of the lsdoc file.
4: Display only the last 7 lines of the file lsdoc.
5: Remove the file lsdoc.
6: There will be B’day celebration from the friends file, find how many B’day parties will 
be held. If two of the friends have the B’date on the same day, then we will be having 
one party on that day.
7: Display the lines starting with Ma, in the file friends.
8: Display the lines starting with Ma, ending with i or ending with id, in the file friends.
9: Print all the files and the directory files from the current directory across all the sub 
directories, along with its path
10: Print only the Directory files.
11: Display the files starting with chap, along with its path.
12: Sort the file friends in ascending order of names. 
13: Display the contents of the file friends in uppercase letters.
14: Store the contents of your home directory in a file called dir.
15: From the above file dir, display the file permissions and the name of the file only.
16: From the same dir file, store only the file names in a file called files.
17: From the same dir file, store only the permissions of files in a file called perms.
18: From the same dir file, store only the file sizes in a file called sizes.
19: Display the file names, sizes and permissions from your directory in that order. 
20: Display the number of users working on the system.

 Using Process-Related Commands
1. Find out the PID of the processes that are activated by you
2. Find out the information about all the processes that are currently active
3. Start a different process in the background. Find out the status of the background 
process using the PID of the same.

VI editor
Create a file using Vi and tyep in some data
Use navigation commands to search wrd unix and replace it with linux.
(Try other commands for vi)


Day 3:
Write Shell Program for the following::
1. Write a shell script that takes the user name as input and reports whether he / she has logged in or not.
2: Write a shell script to display the file name and its contents of all the files that is there in the current directory.
3: Write a shell script, which will take a file name as argument and check whether the file exists and display its access permissions for user.
4: Pass three numbers as command line arguments and display the largest number in the given three numbers.
5: To create a menu program for a) creating a file, b) Creating a directory, c) copying a file, d) moving a file. (use functions)
    a. If the file exists already give the appropriate message
    b. If the dir exists already give the appropriate error message
    c. Source file should exist if not give a message, It should have read permission if not another message, Destination file either there or not,
       if not there then create it and copy it. If there, then ask whether to overwrite or not, if yes then overwrite it or else 
       give a message file exists already and not overwritten.
6:Let the script display its name and its PID.
7: Get the concatenated o/p of 2 files into a third file: Take 3 command line arguments: 
The first argument is the name of a destination file, and the other two arguments are 
names of files whose contents are to be placed in the destination file.
8: Write shell program to accept radius from uset and using function calcualte area and circumference of circle and print both results in calling enviorment.
9: Write shell program to accept limit from user and using function calculate sum of number 1-n (n is limit) and return and from function.
10. Write shell program to calculate reverse of number using funciton
